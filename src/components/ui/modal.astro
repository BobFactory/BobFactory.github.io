---
// Modal.astro
export interface Props {
  size?: "sm" | "md" | "lg" | "xl" | "full";
  backdrop?: boolean;
  persistent?: boolean;
  showCloseButton?: boolean;
  className?: string;
}

const {
  size = "xl",
  backdrop = true,
  persistent = false,
  showCloseButton = true,
  className = "",
} = Astro.props;

// Define size classes
const sizeClasses = {
  sm: "max-w-md",
  md: "max-w-lg",
  lg: "max-w-4xl",
  xl: "max-w-6xl",
  full: "max-w-full m-4",
};

const modalClass = `relative w-full ${sizeClasses[size]} max-h-[90vh] overflow-y-auto py-6 bg-white px-7 sm:rounded-lg mx-4 ${className}`;
---

<template x-teleport="body">
  <div
    x-show="modalOpen"
    class="fixed top-0 left-0 z-[99] flex items-center justify-center w-screen h-screen"
    x-cloak
  >
    <!-- Backdrop -->
    {
      backdrop && (
        <div
          x-show="modalOpen"
          x-transition:enter="ease-out duration-300"
          x-transition:enter-start="opacity-0"
          x-transition:enter-end="opacity-100"
          x-transition:leave="ease-in duration-300"
          x-transition:leave-start="opacity-100"
          x-transition:leave-end="opacity-0"
          @click={persistent ? "" : "closeModal()"}
          class="absolute inset-0 w-full h-full bg-black/50"
        />
      )
    }

    <!-- Modal Content -->
    <div
      x-show="modalOpen"
      x-trap.inert.noscroll="modalOpen"
      x-transition:enter="ease-out duration-300"
      x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
      x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100"
      x-transition:leave="ease-in duration-200"
      x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100"
      x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
      class={modalClass}
    >
      <!-- Close Button -->
      {
        showCloseButton && (
          <button
            @click="closeModal()"
            class="absolute top-4 right-4 flex items-center justify-center w-8 h-8 text-gray-600 rounded-full hover:text-gray-800 hover:bg-gray-100 transition-colors z-10 focus:outline-none"
          >
            <svg
              class="w-15 h-15"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M6 18L18 6M6 6l12 12"
              />
            </svg>
          </button>
        )
      }

      <!-- Slot Content -->
      <slot />
    </div>
  </div>
</template>
